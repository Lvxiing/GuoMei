<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cssl.mapper.OrdersMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cssl.entity.Orders">
        <id column="order_id" property="id" />
        <result column="address_id" property="addressId" />
        <result column="pay_date" property="payDate" />
        <result column="order_time" property="orderTime" />
        <result column="order_total" property="total" />
        <result column="order_status" property="status" />
        <result column="order_no" property="orderNo" />
        <result column="user_id" property="userId" />
    </resultMap>
    <resultMap type="map" id="maps">
        <!-- column:数据库字段  property:实体类属性  -->
        <result column="order_id" property="id"/>
        <result column="goods_title" property="title"/>
        <result column="order_time" property="orderTime"/>
        <result column="order_total" property="total"/>
        <result column="order_status" property="status"/>
        <result column="order_no" property="orderNo"/>
        <result column="address_detail" property="address"/>
        <result column="address_name" property="userName"/>
    </resultMap>
    <select id="findOrdersByUserId" resultType="map" parameterType="map">
        SELECT * FROM orders
        <where>
            <if test=" uid!= null and uid!='' ">
                and user_id = #{uid}
            </if>
            <if test=" ono!= null and ono!=''and ono!='null' ">
                and order_no LIKE concat('%',#{ono},'%')
            </if>
            <if test=" days!= null and days!=''and days!='null' ">
                AND TO_DAYS(NOW()) - TO_DAYS(order_time) &lt;= #{days}
            </if>
            <if test="status!= null and status!='null'">
                AND order_status=#{status}
            </if>
        </where>
   </select>

    <select id="findOrdersDetail" resultType="map">
        SELECT o.order_id oid,g.goods_id gid,o.detail_num num,g.`goods_title` title,g.`goods_main_img` img,c.category_id,c.category_level,g.goods_price FROM order_detail o
        INNER JOIN goods g ON g.`goods_id` = o.goods_id
        INNER JOIN brand b ON g.`brand_id` = b.`brand_id`
        INNER JOIN category c ON c.category_id = b.`category_id`
        WHERE o.order_id = #{oid}
    </select>
    <!--查询用户订单的待付款待收货总记录-->
    <select id="findTotal" parameterType="int" resultType="map">
        SELECT COUNT(CASE WHEN(order_status=1)THEN order_status END) AS num1,
               COUNT(CASE WHEN(order_status=4)THEN order_status END) AS num2
        FROM orders WHERE user_id =#{uid}
    </select>
    <!--根据订单号查询地址表的相关信息-->
    <select id="findAddressByOrder" parameterType="int" resultType="map">
        SELECT a.* FROM orders o
                            INNER JOIN address a ON o.`address_id`=a.`address_id`
        WHERE o.`order_id`=#{oid}
    </select>






    <!--后台查看订单详情-->
    <select id="orderDetail" resultType="map" parameterType="string">
        SELECT o.order_no,g.`goods_title`,s.`detail_num`,s.`detail_money`,g.`goods_main_img`
        FROM orders o
                 INNER JOIN order_detail s ON s.`order_id`=o.order_id
                 INNER JOIN   goods g ON g.`goods_id`=s.`goods_id`
        WHERE o.`order_no`=#{order_no}
    </select>
    <!--用于插入评价表-->
    <select id="byGoodId" parameterType="string" resultType="map">
        SELECT g.`goods_id`,o.`order_id`,o.`user_id`
        FROM orders o
                 INNER JOIN order_detail s ON s.`order_id`=o.order_id
                 INNER JOIN   goods g ON g.`goods_id`=s.`goods_id`
        WHERE o.`order_no`=#{order_no}
    </select>

    <!--查询订单信息-->
    <select id="orderList" resultMap="maps" parameterType="map">
        SELECT  o.`order_id`,
        a.`address_name`,a.`address_detail`,
        o.`order_no`,o.`order_status`,
        o.`order_total`,o.`order_time`
        FROM orders o
        INNER JOIN address a ON a.`address_id`=o.`address_id`

        <trim prefix="where" prefixOverrides="and ||or">
            <if test="name !='null'and name !='' and name!=null ">
                and  a.`address_name` LIKE CONCAT(CONCAT('%',#{name}),'%')
            </if>
            <if test="orderNo !='null'and orderNo !='' and orderNo!=null ">
                and o.`order_no` LIKE CONCAT(CONCAT('%',#{orderNo}),'%')
            </if>
        </trim>
    </select>
    <!--根据订单号查询订单详情(用于修改回显)-->
    <select id="ByIdOrders" resultMap="maps" parameterType="string">
        SELECT DISTINCT o.`order_id`,
                        a.`address_name`,a.`address_detail`,
                        o.`order_no`,o.`order_status`,
                        o.`order_total`,o.`order_time`
        FROM orders o
                 INNER JOIN address a ON a.`address_id`=o.`address_id`
        where o.`order_no`=#{orderNo}
    </select>
    <!--修改订单状态-->
    <update id="updateStatus" parameterType="orders">
        UPDATE orders SET order_status=#{status} WHERE order_no=#{orderNo}
    </update>
    <!--删除订单-->
    <delete id="deleteOrder" parameterType="int">
        delete from orders where order_id=#{orderId}
    </delete>
    <!--计算本月订单数量和金额-->
    <select id="orderQuantity" resultType="map">
        SELECT COUNT(0) AS nums,IFNULL(SUM(order_total),0) AS money FROM orders
        WHERE  SUBSTR(order_time,6,2)=SUBSTR(CURDATE(),6,2)
    </select>
    <!--计算本月退单数量-->
    <select id="returnQuantity" resultType="map">
        SELECT COUNT(0) AS nums,IFNULL(SUM(order_total),0) AS money  FROM orders
        WHERE SUBSTR(order_time,6,2)=SUBSTR(CURDATE(),6,2) AND order_status=6
    </select>
    <!--计算本月订单实际金额-->
    <select id="orderAmount" resultType="double">
        SELECT IFNULL(SUM(order_total),0) AS money  FROM orders
        WHERE SUBSTR(order_time,6,2)=SUBSTR(CURDATE(),6,2) AND
            order_status IN (2,3,4,5)
    </select>
    <!--计算最近一周的订单金额-->
    <select id="weekOrderQuantity" resultType="map">
        SELECT  SUBSTR(order_time,1,10) AS times,IFNULL(SUM(order_total),0) AS money  FROM orders
        WHERE
            DATE_SUB(CURDATE(), INTERVAL 7 DAY) <![CDATA[ <= ]]> DATE(order_time)
        GROUP BY  SUBSTR(order_time,1,10)
    </select>
    <!--查询最近一周的实际金额-->
    <select id="weekOrderAmount" resultType="map">
        SELECT SUBSTR(order_time,1,10) AS times, IFNULL(SUM(order_total),0) AS money  FROM orders
        WHERE order_status IN (2,3,4,5) AND
            DATE_SUB(CURDATE(), INTERVAL 7 DAY) <![CDATA[ <= ]]>  DATE(order_time)
        GROUP BY  SUBSTR(order_time,1,10)
    </select>
    <!--查询最近一周的退款金额-->
    <select id="weekReturnQuantity" resultType="map">
        SELECT SUBSTR(order_time,1,10) AS times, IFNULL(SUM(order_total),0) AS money  FROM orders
        WHERE order_status=6 AND
            DATE_SUB(CURDATE(), INTERVAL 7 DAY) <![CDATA[ <= ]]> DATE(order_time)
        GROUP BY  SUBSTR(order_time,1,10)
    </select>
    <!--查询最近一周的未付金额-->
    <select id="weekUnpaidAmount" resultType="map">
        SELECT SUBSTR(order_time,1,10) AS times, IFNULL(SUM(order_total),0) AS money  FROM orders
        WHERE order_status=1 AND
            DATE_SUB(CURDATE(), INTERVAL 7 DAY) <![CDATA[ <= ]]> DATE(order_time)
        GROUP BY  SUBSTR(order_time,1,10)
    </select>


    <insert id="addOrder" useGeneratedKeys="true" keyProperty="id" keyColumn="order_id">
        INSERT INTO orders(user_id,address_id,order_time,order_total,order_status,order_no) VALUES (#{userId},#{addressId},#{orderTime},#{total},#{status},#{orderNo})
    </insert>

    <select id="userPayInfo" resultType="map">
        SELECT g.`goods_title` AS title, d.detail_money AS money,b.brand_name FROM order_detail d
       INNER JOIN orders  o ON d.order_id = o.order_id
       INNER JOIN goods g ON g.`goods_id` = d.goods_id
       INNER JOIN brand b ON b.brand_id = g.brand_id
        WHERE o.order_id = #{oid}

    </select>
</mapper>
